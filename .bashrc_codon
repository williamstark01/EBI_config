# vim: set filetype=sh :

# William Stark (william@ebi.ac.uk)


# verify running in the Codon cluster
if [[ "$LSF_ENVDIR" != "/ebi/lsf/codon/conf" ]]; then
    echo "This configuration is meant to be used on the Codon cluster, exiting."
    kill -INT $$
fi


TEAM_NAME=genebuild


export NFS_ROOT="/nfs/production/flicek/ensembl/$TEAM_NAME/$USER"
export HPS_ROOT="/hps/nobackup/flicek/ensembl/$TEAM_NAME/$USER"
export SOFTWARE_ROOT="/hps/software/users/ensembl/$TEAM_NAME/$USER"

alias nfs="cd $NFS_ROOT"
alias hps="cd $HPS_ROOT"
alias software="cd $SOFTWARE_ROOT"

# suggested ENSCODE path: /hps/software/users/ensembl/repositories/$USER
export ENSCODE="$SOFTWARE_ROOT/enscode"


if [[ -d "$HOME/EBI_config/bin" ]]; then
    export PATH="$HOME/EBI_config/bin:$PATH"
fi


# open a bsub interactive shell
alias bsub-shell="bsub -q production -Is -tty $SHELL"


# tmux bash completion
# https://github.com/imomaliev/tmux-bash-completion
if [[ -d "$SOFTWARE_ROOT/programs/tmux-bash-completion" ]]; then
    source "$SOFTWARE_ROOT/programs/tmux-bash-completion/completions/tmux"
fi


# https://www.ebi.ac.uk/seqdb/confluence/display/ENSGBD/Genebuild+virtual+user%2C+shared+environment+and+shared+data
################################################################################
export ENSEMBL_SOFTWARE_HOME=/hps/software/users/ensembl/ensw/C8-MAR21-sandybridge

export HIVE_EMAIL="$USER@ebi.ac.uk"
export GENEBUILDER_ID=50

#ensembl_version=$(mysql-ens-meta-prod-1 ensembl_metadata --skip-column-names --execute="SELECT ensembl_version FROM data_release WHERE is_current = 1;")
ENSEMBL_RELEASE="104"

# MySQL commands
# https://www.ebi.ac.uk/seqdb/confluence/display/ENS/MySQL+commands
#if [[ -d /nfs/software/ensembl/mysql-cmds/ensembl/bin ]]; then
#    export PATH="/nfs/software/ensembl/mysql-cmds/ensembl/bin:$PATH"
#fi
################################################################################


load_homebrew() {
    ### Homebrew (Linuxbrew)
    # /hps/software/users/ensembl/ensw/latest/envs/minimal.sh
    # /hps/software/users/ensembl/ensw/C8-MAR21-sandybridge/envs/linuxbrew.sh
    export ENSEMBL_SOFTWARE_HOME=/hps/software/users/ensembl/ensw/C8-MAR21-sandybridge

    export HOMEBREW_ENSEMBL_MOONSHINE_ARCHIVE=/hps/software/users/ensembl/ensw/ENSEMBL_MOONSHINE_ARCHIVE
    export ENSEMBL_MOONSHINE_ARCHIVE=/hps/software/users/ensembl/ensw/ENSEMBL_MOONSHINE_ARCHIVE

    export LINUXBREW_HOME=/hps/software/users/ensembl/ensw/C8-MAR21-sandybridge/linuxbrew
    export PATH="$LINUXBREW_HOME/bin:$LINUXBREW_HOME/sbin:$PATH"
    export MANPATH="$LINUXBREW_HOME/share/man:$MANPATH"
    export INFOPATH="$LINUXBREW_HOME/share/info:$INFOPATH"
}


# z
# https://github.com/rupa/z
Z_ROOT_DIRECTORY="$SOFTWARE_ROOT/programs/z"
[[ -d "$Z_ROOT_DIRECTORY" ]] && export Z_ROOT_DIRECTORY

### Python pyenv
#PYENV_ROOT="$SOFTWARE_ROOT/.pyenv"
PYENV_ROOT="$NFS_ROOT/.pyenv"
[[ -d "$PYENV_ROOT" ]] && export PYENV_ROOT

### Rust
# https://www.rust-lang.org/
[[ -d "$SOFTWARE_ROOT/.rustup" ]] && export RUSTUP_HOME="$SOFTWARE_ROOT/.rustup"
[[ -d "$SOFTWARE_ROOT/.cargo" ]] && export CARGO_HOME="$SOFTWARE_ROOT/.cargo"
[[ -d "$CARGO_HOME/bin" ]] && export PATH="$CARGO_HOME/bin:$PATH"

### Node.js nvm
NVM_DIR="$SOFTWARE_ROOT/.nvm"
[[ -d "$NVM_DIR" ]] && export NVM_DIR
